@using Test.Models
@using Test.Repositories.Book
@using Test.ViewModels
@inject IBookRepository BookRepo
@model BorrowViewModel
@{
    var BookList = BookRepo.GetAllAsListForBorrow();
    SelectList BookSelectedList = new SelectList(BookList, "BookID", "BookTitle");
}
<br /> <br />
<h2 class="text-center">Borrow Information</h2>
<form asp-action="Create" asp-controller="Borrow" method="post">
     <div class="col-md-4">
        <select class="form-select" name="User" id="User" onchange="select_User()">
             <option value="">----Select User----</option>
             @{
                if ((string)TempData["select User"] == "Student")
                {
                                                            <option value="Student" selected>Student</option>
                }
                else
                {
                                                            <option value="Student">Student</option>

                }
                if ((string)TempData["select User"] == "Teacher")
                {
                                                            <option value="Teacher" selected>Teacher</option>
                }
                else
                {
                                                            <option value="Teacher">Teacher</option>

                }
               
             }
         </select>
    </div>
    <br />
    <br />
    <div class="col-md-4">
        <select asp-for="ApplicationUserId" class="form-select">
        </select>
        <span asp-validation-for="ApplicationUserId" class="text-danger"></span>
    </div>
    <br />
    <br />
    <div class="mb-3">
        <label asp-for="BookId" class="form-label"></label>
        <button type="button" class="btn btn-info" style="display:inline; position:relative; left:1200px;" onclick="addToList()">Add</button>
        <select asp-for="BookId" asp-items="@BookSelectedList" class="form-select" style="display:inline-block;">
            <option value="0">----Select Availabel Book----</option>
        </select>
        <span asp-validation-for="BookId" class="text-danger"></span>
    </div>
    <table class="table table-hover table-light" id="bookTable">
        <thead class="thead-dark">
            <tr>
                <th scope="col">Books</th>
            </tr>
        </thead>
        <tbody >
            <tr id="tr">
                    <td class="table-active" id="add"></td>
                    
                </tr>
        </tbody>
    </table>
    <br />
    <br />
    <div class="form-group">
        <label asp-for="BorrowedDate"></label>
        <input asp-for="BorrowedDate" class="form-control" required readonly>
    </div>
    <br />
    <div class="form-group">
        <label asp-for="ReturnDate"></label>
        <input asp-for="ReturnDate"class="form-control" required readonly>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">Submit</button>
</form>
@*     <partial name="_SearchPartial" id="partial"></partial>
 *@ 

@section Scripts{
    <script>
        // Set the current date and time in the Borrowed Date input field
        var Datenow = new Date();
        var nowFormatted = Datenow.toISOString().slice(0, 16);
        document.getElementById("BorrowedDate").value = nowFormatted;

        // Calculate the date one week from the current date and time
        var oneWeekFromNow = new Date(Datenow.getTime() + (7 * 24 * 60 * 60 * 1000));
        var oneWeekFromNowFormatted = oneWeekFromNow.toISOString().slice(0, 16);
        document.getElementById("ReturnDate").value = oneWeekFromNowFormatted;
        function select_User() 
        {

            var user = document.getElementById("User").value;
            console.log(user);
            $.ajax({
                url: "/Borrow/ShowUsers",
                data: { "select": user},
                success: function (result) {
                    console.log(result);
                    document.getElementById("ApplicationUserId").innerHTML = "";
                    for(let user of result)
                    {
                        document.getElementById("ApplicationUserId").innerHTML +=
                            "<option value='"+user.id+"'>"+user.firstName+" "+user.lastName+"<option>"
                    }
                    
                }
            });
        }
        function addToList() 
        {
            var book = document.getElementById("BookId");
            var selectedBook = book.options[book.selectedIndex];
            if (selectedBook.value !== "0") {
                BookItem = bookAdd;
        @{
            if (!Model.BookId.Equals(0))
            {
                Book book = @BookRepo.GetById(Model.BookId);
                book.Count -= 1;
                Model.BookIdForBorrow.Add(Model.BookId);
                Model.books.Add(book);
            }
          
        }
                document.getElementById("tr").innerHTML = "<td class='table - active' id='" + @Model.BookId + "' onclick='set_selected(event)'>" + selectedBook.text + "</td>";
                selectedBook.disabled = true;
                selectedBook.selected = false;
            }
        }
        function set_selected(event) {
            var selectedElement = event.target;
            selectedElement.classList.toggle("selected");
        }

    </script>
}
<style>
    .selected {
        background-color: blue;
    }
</style>
@section AdvertiseSection
{
    <partial name="_advertisesSectionPartial"></partial>
}


